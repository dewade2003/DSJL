<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--Button-->
    <Style x:Key="BaseButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#239fdb"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#FFFBFBFB"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#ADADAD"/>
                <Setter Property="Background" Value="#e5e2e2"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="#1b79a7"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey=BaseButton}"/>

    <Style TargetType="{x:Type Button}" x:Key="greenButton" BasedOn="{StaticResource ResourceKey=BaseButton}">
        <Setter Property="Background" Value="#829d2e"/>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="#627d0f"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="redButton" BasedOn="{StaticResource ResourceKey=BaseButton}">
        <Setter Property="Background" Value="#f53e3e"/>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="#bf3030"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="toolBarStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#f6f6f6"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="#acacac"/>
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="HorizontalGridLinesBrush" Value="#474747"/>
        <Setter Property="VerticalGridLinesBrush" Value="#474747"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ColumnHeaderHeight" Value="30"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="Background" Value="#ffffff"/>
        <Setter Property="RowHeight" Value="30"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="AlternatingRowBackground" Value="#bcd5eb"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
    </Style>

    <ImageBrush x:Key="ImgBrush" ImageSource="/DSJL;component/Assets/Images/dgheaderbg.png"/>
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid>
                            <!-- an overlayer glass effect -->
                            <Border VerticalAlignment="Top" Name="GradientBorder" BorderThickness="0,0,1,0" BorderBrush="#216394" Height="35" Background="{StaticResource ImgBrush}"/>
                            <ContentPresenter Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"/>
                        </Grid>
                        <Path Name="UpArrow" Fill="White" HorizontalAlignment="Right"
                                  VerticalAlignment="Center" Margin="0,2,7,0" Visibility="Hidden">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,0">
                                        <LineSegment Point="7,0"/>
                                        <LineSegment Point="3.5,6"/>
                                        <LineSegment Point="0,0"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Path Name="DownArrow" Fill="White" HorizontalAlignment="Right"
                                  VerticalAlignment="Center" Margin="0,2,7,0" Visibility="Hidden">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,6">
                                        <LineSegment Point="7,6"/>
                                        <LineSegment Point="3.5,0"/>
                                        <LineSegment Point="0,6"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="UpArrow" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="DownArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="DownArrow" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="UpArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Foreground" Value="#505050"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#fb9533"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#f8c89a"/>
                <Setter Property="Foreground" Value="#505050"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#d8d8d9"/>
                <Setter Property="Foreground" Value="#505050"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Image x:Name="checkImg" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Source="/DSJL;component/Assets/Images/uncheck.png" Width="16" Height="16"/>
                        </BulletDecorator.Bullet>
                        <ContentPresenter VerticalAlignment="Center" Margin="3,0,0,0"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkImg" Property="Source" Value="/DSJL;component/Assets/Images/check.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Image x:Name="checkImg" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Source="/DSJL;component/Assets/Images/uncheck.png" Width="16" Height="16"/>
                        </BulletDecorator.Bullet>
                        <ContentPresenter VerticalAlignment="Center" Margin="3,0,0,0"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkImg" Property="Source" Value="/DSJL;component/Assets/Images/check.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="controlBarStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="BorderBrush" Value="#FF2B3DA1"/>
        <Setter Property="Background" Value="#FFFFFF"/>
    </Style>
</ResourceDictionary>