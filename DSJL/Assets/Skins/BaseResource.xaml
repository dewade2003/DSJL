<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vc="clr-namespace:Visifire.Charts;assembly=WPFVisifire.Charts">
    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Window.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.5" To="1.0" Duration="0:0:0.3"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
        <Setter Property="FontFamily" Value="SimSun"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Background" Value="#FF2B3DA1"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="15" ShadowDepth="0" Opacity="0.5"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border x:Name="windowBorder" Background="{TemplateBinding Background}" Margin="10"
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}"      
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Margin" TargetName="windowBorder" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Button-->
    <Style x:Key="baseButton" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="#FFFBFBFB"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#ADADAD"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFAEAEB1" Offset="0"/>
                            <GradientStop Color="#FF49494B" Offset="0.996"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--最小化按钮-->
    <Style x:Key="btnMinStyle" BasedOn="{StaticResource ResourceKey=baseButton}" TargetType="Button">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="0,0,65,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="White" Opacity="0.3"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="White" Opacity="0.3"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--最大化按钮-->
    <Style x:Key="btnMaxStyle" BasedOn="{StaticResource ResourceKey=baseButton}" TargetType="Button">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="0,0,35,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="White" Opacity="0.3"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="White" Opacity="0.3"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--关闭按钮-->
    <Style x:Key="btnCloseStyle" BasedOn="{StaticResource ResourceKey=baseButton}" TargetType="Button">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="0,0,5,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="#FFCE2929"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#FFCE2929"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--ListBox    菜单-->
    <Style x:Key="MenuListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderThickness="00" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Bottom"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="menu" TargetType="ListBoxItem">
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid x:Name="itemgrid" Width="150" Height="60" Margin="2,0" VerticalAlignment="Bottom">
                        <Grid.Background>
                            <SolidColorBrush Color="White" Opacity="0"/>
                        </Grid.Background>
                        <ContentPresenter Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="itemgrid" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#99120552" Opacity="0.6"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="itemgrid" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#99120552" Opacity="0.3"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="verticalSeparator" TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="0,3"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <TransformGroup>
                    <TransformGroup.Children>
                        <TransformCollection>
                            <RotateTransform Angle="90"/>
                        </TransformCollection>
                    </TransformGroup.Children>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="listBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderThickness="0" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                        <ScrollViewer>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Top"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!--chart破解-->
    <Style TargetType="TextBlock">
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <Trigger Property="Text" Value="Visifire Trial Edition">
                <Trigger.Setters>
                    <Setter Property="Visibility"  Value="Collapsed"></Setter>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="vc:PlotArea">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ShadowEnabled" Value="false"/>
    </Style>
    <Style TargetType="vc:Legend">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ShadowEnabled" Value="false"/>
        <Setter Property="BorderBrush" Value="#FFFFFF"/>
    </Style>
    <Style TargetType="vc:Chart">
        <Setter Property="BorderBrush" Value="#acacac"/>
    </Style>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="13"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Height="13" Width="13">
                        <Border BorderBrush="#FF7898B5" BorderThickness="1" CornerRadius="1" Height="9" SnapsToDevicePixels="true" Width="9">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                    <GradientStop Color="White" Offset=".2"/>
                                    <GradientStop Color="#FFC0B7A6" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Path x:Name="ExpandPath" Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z" Fill="Black" Margin="1,1,1,1"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="ExpandPath" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
        <Setter Property="IsSelected" Value="{Binding IsChecked, Mode=TwoWay}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid Name="g">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions> 
                        <ToggleButton x:Name="Expander" Grid.Column="0" Style="{StaticResource ResourceKey=ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <Border x:Name="back" Grid.Column="1" BorderThickness="0">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header"/>
                        </Border>

                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="back" Property="Background" Value="#00a3e7"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="22"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>